 1) Abstraction in Java
---------------------------------------------------------------
Abstraction is a process of hiding the implementation details and showing only functionality to the user.
Another way, it shows only essential things to the user and hides the internal details, for example, sending SMS where we type the text and send the message. We do not know the internal processing about the message delivery.
Abstraction lets you focus on what the object does instead of how it does it.
-------------------------------------------------------------------
2) Ways to achieve Abstraction
There are two ways to achieve abstraction in Java:
i) Using Abstract Class (0 to 100%)
ii) Using Interface (100%)
---------------------------------------------------------------------
3) Abstract Clas5)s in Java
An abstract class in Java acts as a partially implemented class that itself cannot be instantiated. It exists only for subclassing purposes, and provides a template for its subcategories to follow. Abstract classes can have implementations with abstract methods. Abstract methods are declared to have no body, leaving their implementation to subclasses.
-------------------------------------------------------------------
4) Points to Remember
i) An abstract class must be declared with an abstract keyword.
ii) It can have abstract and non-abstract methods.
iii) It cannot be instantiated.
iv) It can have constructors and static methods also.
v) It can have final methods which will force the subclass not to change the body of the method.
-----------------------------------------------------
5)Key Features of Abstract Classes
i) Abstract Methods: Abstract classes can have abstract methods, which are declared without a body. Subclasses must provide concrete implementations for these methods.
ii) Concrete Methods: Abstract classes can also contain concrete methods with defined behavior. Subclasses inherit these methods along with their implementations.
iii) Cannot be Instantiated: Abstract classes cannot be instantiated directly. They serve as a blueprint for other classes and must be extended to be used.
iv) Can Have Constructors: Abstract classes can have constructors, which are invoked when a subclass object is created. These constructors are used to initialize the state of the abstract class.
